.test:end-to-end:
  image: 
    name: cypress/included:9.1.0
    entrypoint: [""]
  tags:
   - docker
  cache: {}
  services:
    - postgres
    - alias: rabbitmq
      name: rabbitmq:management-alpine
    - alias: selenium
      name: selenium/standalone-chrome:4
    - alias: api
      name: gitlab.mediacube.at:5050/a11yphant/a11yphant/api:$CI_COMMIT_REF_SLUG
    - alias: site
      name: gitlab.mediacube.at:5050/a11yphant/a11yphant/site:$CI_COMMIT_REF_SLUG
      entrypoint: [""]
      command: ["npm", "start"]
    - alias: submission-checker
      name: gitlab.mediacube.at:5050/a11yphant/a11yphant/submission-checker:$CI_COMMIT_REF_SLUG
  variables:
    FF_NETWORK_PER_BUILD: 1
    POSTGRES_USER: a11yphant
    POSTGRES_PASSWORD: secret
    POSTGRES_DB: a11yphant
    RABBITMQ_DEFAULT_USER: user
    RABBITMQ_DEFAULT_PASS: secret
    DB_URL: postgresql://a11yphant:secret@postgres:5432/a11yphant
    API_HOST: 0.0.0.0
    API_PORT: 3000
    API_KEY: please-generate-a-secret-key-for-production
    API_CHALLENGES_LOCATION: "../../../../challenges"
    API_MESSAGING_RABBITMQ_URL: amqp://user:secret@rabbitmq:5672
    API_MESSAGING_CONSUME_QUEUE_NAME: api
    API_MESSAGING_PUBLISH_QUEUE_NAME: submission-checker
    SITE_HOST: 0.0.0.0
    SITE_PORT: 3001
    SITE_GRAPHQL_ENDPOINT_SERVER: http://api:3000/graphql
    SITE_GRAPHQL_ENDPOINT_CLIENT: http://site:3001/graphql
    SUBMISSION_CHECKER_RENDERER_BASE_URL: http://api:3000/render/
    SUBMISSION_CHECKER_MESSAGING_RABBITMQ_URL: amqp://user:secret@rabbitmq:5672
    SUBMISSION_CHECKER_MESSAGING_CONSUME_QUEUE_NAME: submission-checker
    SUBMISSION_CHECKER_MESSAGING_PUBLISH_QUEUE_NAME: api
    CYPRESS_BASE_URL: "http://site:3001"
  before_script:
    - apt update
    - apt install ca-certificates curl gnupg lsb-release -y
    - curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    - echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    - apt update
    - apt install docker-ce-cli -y
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

    # configure rabbitmq
    - curl -u user:secret -X POST -T docker/rabbitmq/definitions.json http://rabbitmq:15672/api/definitions

    # seed database
    - export CI_BUILD_NETWORK_ID="$HOSTNAME-job-$CI_JOB_ID-network"
    - docker run --rm -e DB_URL=$DB_URL --network $CI_BUILD_NETWORK_ID gitlab.mediacube.at:5050/a11yphant/a11yphant/api-release:$CI_COMMIT_REF_SLUG npm run prisma:migrate:prod
    - docker run --rm -e DB_URL=$DB_URL --network $CI_BUILD_NETWORK_ID gitlab.mediacube.at:5050/a11yphant/a11yphant/api-release:$CI_COMMIT_REF_SLUG npm run console:prod import:challenges
    - npm run db-dump:update:ci --prefix tests
  script:
    - CYPRESS_IS_CI=true npm run cypress:run --prefix tests
  artifacts:
    when: on_failure
    expire_in: 1 week
    paths:
      - tests/cypress/screenshots
      - tests/cypress/videos
