include:
  - /ci/templates/gitlab-ci-lint.yml
  - /ci/templates/gitlab-ci-test.yml
  - /ci/templates/gitlab-ci-test-end-to-end.yml
  - /ci/templates/gitlab-ci-rules.yml
  - /ci/templates/gitlab-ci-build.yml
  - /ci/templates/gitlab-ci-build-site.yml
  - /ci/templates/gitlab-ci-deploy.yml

cache:
  key: ${CI_COMMIT_REF_SLUG}-alpine
  paths:
    - .npm-alpine

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_BUILDKIT: 1
  DOCKER_CLI_EXPERIMENTAL: enabled
  VERSION: $CI_COMMIT_SHORT_SHA

default:
  before_script:
    - echo "//gitlab.mediacube.at/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> $PROJECT_PATH/.npmrc
    - npm ci --prefix $PROJECT_PATH --cache .npm-alpine --prefer-offline

stages:
  - generate
  - analyze
  - test
  - build
  - end-to-end-tests
  - deploy

#----------------------------------------------------------------------
#
# Jobs
#
#----------------------------------------------------------------------

#-----------------------------------
# NestJS AWS Messaging
#-----------------------------------

#lint:nestjs-aws-messaging:
#  extends:
#    - .lint
#    - .run_on_nestjs_aws_messaging_change
#  needs: []
#  variables:
#    PROJECT_PATH: packages/nestjs-aws-messaging
#
#test:nestjs-aws-messaging:
#  extends:
#    - .test
#  needs: []
#  variables:
#    PROJECT_PATH: packages/nestjs-aws-messaging
#  only:
#    - master
#    - develop
#    - merge_request
#
#publish:nestjs-aws-messaging:
#  tags:
#    - docker
#  stage: deploy
#  image: node:14-alpine
#  variables:
#    PROJECT_PATH: packages/nestjs-aws-messaging
#  script:
#    - npm run build --prefix $PROJECT_PATH
#    - cd $PROJECT_PATH
#    - npm publish
#  only:
#    - /^nestjs-aws-messaging-v.*$/

#-----------------------------------
# content yml Linting
#-----------------------------------

#lint:content:
#  extends:
#    - .run_on_content_change
#  tags:
#    - docker
#  stage: analyze
#  image: node:14-alpine
#  needs: []
#  before_script:
#    - echo "//gitlab.mediacube.at/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
#    - npm ci --ignore-scripts --cache .npm-alpine
#  script:
#    - npm run lint:content

#-----------------------------------
# ESLint Config
#-----------------------------------

#lint:eslint-config:
#  extends:
#    - .lint
#    - .run_on_eslint_config_change
#  needs: []
#  variables:
#    PROJECT_PATH: packages/eslint-config
#
#release:eslint-config:
#  tags:
#    - docker
#  stage: deploy
#  image: node:14-alpine
#  variables:
#    PROJECT_PATH: packages/eslint-config
#  before_script:
#    - echo "//gitlab.mediacube.at/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
#    - echo "//gitlab.mediacube.at/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> $PROJECT_PATH/.npmrc
#  script:
#    - echo $CI_PROJECT_ID
#    - echo $CI_JOB_TOKEN
#    - cat .npmrc
#    # --prefix behaves strangely when used with publish
#    - cd $PROJECT_PATH && npm publish
#  only:
#    - /^eslint-config-v.*$/
#  except:
#    - branches
#    - triggers

#-----------------------------------
# Submission Checker
#-----------------------------------

#lint:submission-checker:
#  extends:
#    - .lint
#    - .run_on_submission-checker_change
#  needs: []
#  variables:
#    PROJECT_PATH: services/submission-checker
#
#test:submission-checker:
#  extends:
#    - .test
#  services:
#    - alias: localstack
#      name: localstack/localstack
#  needs: []
#  variables:
#    PROJECT_PATH: services/submission-checker
#    SERVICES: sns,sqs
#  only:
#    - master
#    - develop
#    - merge_request
#
#build:submission-checker:
#  extends:
#    - .build
#  needs:
#    - test:submission-checker
#  variables:
#    PROJECT_PATH: services/submission-checker
#    IMAGE_NAME_APP: a11yphant/a11yphant/submission-checker
#    IMAGE_APP: $CI_REGISTRY/$IMAGE_NAME_APP:$CI_COMMIT_REF_SLUG
#  only:
#    - master
#    - develop
#    - merge_request

#-----------------------------------
# API
#-----------------------------------

generate-graphql-schema:api:
  tags:
    - docker
  stage: generate
  needs: []
  image: node:14-alpine
  variables:
    PROJECT_PATH: services/api
  script: npm run generate-schema --prefix $PROJECT_PATH
  artifacts:
    paths:
      - $PROJECT_PATH/schema.gql
    expire_in: 1 day
  only:
    - master
    - develop
    - merge_request

#lint:api:
#  extends:
#    - .lint
#    - .run_on_api_change
#  needs: []
#  variables:
#    PROJECT_PATH: services/api
#
#test:api:
#  extends:
#    - .test
#  services:
#    - postgres
#  needs: []
#  variables:
#    POSTGRES_DB: a11yphant
#    POSTGRES_USER: a11yphant
#    POSTGRES_PASSWORD: secret
#    DB_URL: postgresql://a11yphant:secret@postgres:5432/a11yphant
#    PROJECT_PATH: services/api
#  only:
#    - master
#    - develop
#    - merge_request
#
#build:api:
#  tags:
#    - docker
#  stage: build
#  image: docker:20
#  needs:
#    - test:api
#  variables:
#    PROJECT_PATH: services/api
#    IMAGE_NAME_APP: a11yphant/a11yphant/api
#    IMAGE_APP: $CI_REGISTRY/$IMAGE_NAME_APP:$CI_COMMIT_REF_SLUG
#    IMAGE_NAME_RELEASE: a11yphant/a11yphant/api-release
#    IMAGE_RELEASE: $CI_REGISTRY/$IMAGE_NAME_RELEASE:$CI_COMMIT_REF_SLUG
#  cache: {}
#  before_script:
#    - echo "//gitlab.mediacube.at/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" >> .npmrc
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#  script:
#    # api app container
#    - docker pull $IMAGE_APP || (docker pull $CI_REGISTRY/$IMAGE_NAME_APP && docker tag $CI_REGISTRY/$IMAGE_NAME_APP $IMAGE_APP || echo "")
#    - docker build . -f $PROJECT_PATH/Dockerfile -t $IMAGE_APP --cache-from $IMAGE_APP --build-arg VERSION=$CI_COMMIT_REF_SLUG --secret id=npmrc,src=.npmrc
#    - docker push $IMAGE_APP
#    # api release container
#    - docker pull $IMAGE_RELEASE || (docker pull $CI_REGISTRY/$IMAGE_NAME_RELEASE && docker tag $CI_REGISTRY/$IMAGE_NAME_RELEASE $IMAGE_RELEASE || echo "")
#    - docker build . -f $PROJECT_PATH/Dockerfile -t $IMAGE_RELEASE --cache-from $IMAGE_RELEASE --build-arg VERSION=$CI_COMMIT_REF_SLUG --secret id=npmrc,src=.npmrc --target release
#    - docker push $IMAGE_RELEASE
#  only:
#    - master
#    - develop
#    - merge_request

#-----------------------------------
# Site
#-----------------------------------

#lint:site:
#  extends:
#    - .lint
#    - .run_on_site_change
#  needs:
#    - generate-graphql-schema:api
#  variables:
#    PROJECT_PATH: services/site
#
#test:site:
#  extends:
#    - .test
#  needs:
#    - generate-graphql-schema:api
#  variables:
#    PROJECT_PATH: services/site
#  only:
#    - master
#    - develop
#    - merge_request

build:site:
  extends:
    - .build:site
  only:
    - merge_request
    - develop
    - master

#-----------------------------------
# Terraform
#-----------------------------------

#terraform:check-format:
#  extends:
#    - .run_on_terraform_change
#  tags:
#    - docker
#  stage: analyze
#  needs: []
#  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
#  cache: {}
#  before_script:
#    - "" # do nothing
#  script:
#    - terraform -chdir=terraform fmt -recursive -check
#
#terraform:cloud:validate:
#  extends:
#    - .run_on_terraform_change
#  tags:
#    - docker
#  stage: analyze
#  needs: []
#  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
#  cache: {}
#  before_script:
#    - terraform -chdir=terraform/cloud init
#  script:
#    - terraform -chdir=terraform/cloud validate
#
#terraform:local:validate:
#  extends:
#    - .run_on_terraform_change
#  tags:
#    - docker
#  stage: analyze
#  needs: []
#  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
#  cache: {}
#  before_script:
#    - terraform -chdir=terraform/local init
#  script:
#    - terraform -chdir=terraform/local validate

#-----------------------------------
# End to end tests
#-----------------------------------

#test:end-to-end:
#  extends: .test:end-to-end
#  stage: end-to-end-tests
#  needs:
#    - build:api
#    - build:site
#    - build:submission-checker
#  only:
#    - merge_request
#    - develop
#    - master

#-----------------------------------
# Deployment
#-----------------------------------

#deploy-review:
#  extends:
#    - .deploy
#  needs:
#    - test:end-to-end
#  variables:
#    WORKSPACE: review-${CI_MERGE_REQUEST_IID}
#    DOMAIN: review-${CI_MERGE_REQUEST_IID}.a11yphant.com
#    USE_CUSTOM_DOMAIN: 1
#    API_GRAPHQL_DEBUG: 1
#    API_GRAPHQL_PLAYGROUND: 1
#    API_GRAPHQL_SCHEMA_INTROSPECTION: 1
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    url: https://review-${CI_MERGE_REQUEST_IID}.a11yphant.com
#    on_stop: stop-environment
#  only:
#    - merge_request
#
#deploy-staging:
#  extends:
#    - .deploy
#  needs:
#    - test:end-to-end
#  variables:
#    WORKSPACE: staging
#    DOMAIN: beta.a11yphant.com
#    USE_CUSTOM_DOMAIN: 1
#    API_DYNO_SIZE: free
#    GITHUB_CLIENT_ID: $GITHUB_CLIENT_ID_STAGING
#    GITHUB_CLIENT_SECRET: $GITHUB_CLIENT_SECRET_STAGING
#    GITHUB_CALLBACK_URL: $GITHUB_CALLBACK_URL_STAGING
#    TWITTER_CONSUMER_KEY: $TWITTER_CONSUMER_KEY
#    TWITTER_CONSUMER_SECRET: $TWITTER_CONSUMER_SECRET
#    TWITTER_CALLBACK_URL: $TWITTER_CALLBACK_URL_STAGING
#    SPLITBEE_TOKEN: $SPLITBEE_TOKEN_STAGING
#    API_GRAPHQL_DEBUG: 1
#    API_GRAPHQL_PLAYGROUND: 1
#    API_GRAPHQL_SCHEMA_INTROSPECTION: 1
#  environment:
#    name: staging
#    url: https://beta.a11yphant.com
#  only:
#    - develop
#
#deploy-production:
#  extends:
#    - .deploy
#  needs:
#    - test:end-to-end
#  variables:
#    WORKSPACE: production
#    DOMAIN: a11yphant.com
#    USE_CUSTOM_DOMAIN: 1
#    API_DYNO_SIZE: hobby
#    GITHUB_CLIENT_ID: $GITHUB_CLIENT_ID_PROD
#    GITHUB_CLIENT_SECRET: $GITHUB_CLIENT_SECRET_PROD
#    GITHUB_CALLBACK_URL: $GITHUB_CALLBACK_URL_PROD
#    TWITTER_CONSUMER_KEY: $TWITTER_CONSUMER_KEY
#    TWITTER_CONSUMER_SECRET: $TWITTER_CONSUMER_SECRET
#    TWITTER_CALLBACK_URL: $TWITTER_CALLBACK_URL_PROD
#    SPLITBEE_TOKEN: $SPLITBEE_TOKEN_PROD
#    API_HOBBY_BASIC_DB: 1
#  environment:
#    name: production
#    url: https://a11yphant.com
#  only:
#    - master
#
#stop-environment:
#  tags:
#    - docker
#  stage: deploy
#  variables:
#    WORKSPACE: review-${CI_MERGE_REQUEST_IID}
#    DOMAIN: review-${CI_MERGE_REQUEST_IID}.a11yphant.com
#    USE_CUSTOM_DOMAIN: 0
#  needs: []
#  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
#  cache: {} # disable cache
#  before_script:
#    - terraform -chdir=terraform/cloud init
#  script:
#    - terraform -chdir=terraform/cloud workspace select $WORKSPACE
#    - terraform -chdir=terraform/cloud destroy -auto-approve -var="gitlab_ci_registery_user=$CI_REGISTRY_USER" -var="gitlab_ci_registry_password=$CI_REGISTRY_PASSWORD" -var="heroku_registry_password=$HEROKU_AUTH_TOKEN" -var="domain=$DOMAIN" -var="route53_zone_id=$AWS_ZONE_ID" -var="domain=$DOMAIN" -var="route53_zone_id=$AWS_ZONE_ID" -var="use_custom_domain=$USE_CUSTOM_DOMAIN" -var="docker_tag=$CI_COMMIT_REF_SLUG"
#    - terraform -chdir=terraform/cloud workspace select default
#    - terraform -chdir=terraform/cloud workspace delete $WORKSPACE
#  when: manual
#  environment:
#    name: review/$CI_COMMIT_REF_NAME
#    action: stop
#  only:
#    - merge_request
