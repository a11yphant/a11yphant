include:
  - /ci/templates/gitlab-ci-lint.yml
  - /ci/templates/gitlab-ci-test.yml
  - /ci/templates/gitlab-ci-rules.yml
  - /ci/templates/gitlab-ci-build.yml
  - /ci/templates/gitlab-ci-production-dependencies.yml
  - /ci/templates/gitlab-ci-deploy.yml

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - services/**/.npm/

default:
  before_script:
    - npm ci --ignore-scripts
    - npm ci --prefix $PROJECT_PATH --cache $PROJECT_PATH/.npm --prefer-offline

stages:
  - build-packages
  - generate
  - analyze
  - test
  - build
  - deploy

#----------------------------------------------------------------------
#
# Jobs
#
#----------------------------------------------------------------------

#-----------------------------------
# Prisma Client
#-----------------------------------

lint:prisma:
  extends:
    - .lint
    - .run_on_prisma_change
  script:
    - npm run prisma:generate --prefix $PROJECT_PATH
    - npm run lint --prefix $PROJECT_PATH
  variables:
    PROJECT_PATH: packages/prisma

test:prisma:
  extends:
    - .test
    - .run_on_prisma_change
  services:
    - postgres
  script:
    - npm run prisma:generate --prefix $PROJECT_PATH
    - npm run test --prefix $PROJECT_PATH
  variables:
    POSTGRES_DB: a11y-challenges
    POSTGRES_USER: a11y-challenges
    POSTGRES_PASSWORD: secret
    DB_URL: postgresql://a11y-challenges:secret@postgres:5432/a11y-challenges
    PROJECT_PATH: packages/prisma

build:prisma:
  tags:
    - docker
  stage: build-packages
  image: node:14-alpine
  variables:
    PROJECT_PATH: packages/prisma
  script:
    - npm run prisma:generate --prefix $PROJECT_PATH
    - npm run build --prefix $PROJECT_PATH
  artifacts:
    expire_in: 1 day
    paths:
      - $PROJECT_PATH/dist
      - $PROJECT_PATH/client
  only:
    - develop
    - master
    - merge_request

#-----------------------------------
# Submission Checker
#-----------------------------------

lint:submission-checker:
  extends:
    - .lint
    - .run_on_submission-checker_change
  variables:
    PROJECT_PATH: services/submission-checker

test:submission-checker:
  extends:
    - .test
    - .run_on_submission-checker_change
  variables:
    PROJECT_PATH: services/submission-checker

#-----------------------------------
# API
#-----------------------------------

generate-graphql-schema:api:
  tags:
    - docker
  stage: generate
  image: node:14-alpine
  variables:
    PROJECT_PATH: services/api
  script: npm run generate-schema --prefix $PROJECT_PATH
  artifacts:
    paths:
      - $PROJECT_PATH/schema.gql
    expire_in: 1 day
  only:
    - master
    - develop
    - merge_request

lint:api:
  extends:
    - .lint
    - .run_on_api_change
  variables:
    PROJECT_PATH: services/api

test:api:
  extends:
    - .test
    - .run_on_api_change
  needs:
   - build:prisma
  services:
    - postgres
  variables:
    POSTGRES_DB: a11y-challenges
    POSTGRES_USER: a11y-challenges
    POSTGRES_PASSWORD: secret
    DB_URL: postgresql://a11y-challenges:secret@postgres:5432/a11y-challenges
    PROJECT_PATH: services/api
  before_script:
    - npm ci --ignore-scripts
    - npm ci --prefix packages/prisma --cache $PROJECT_PATH/.npm --prefer-offline
    - npm ci --prefix $PROJECT_PATH --cache $PROJECT_PATH/.npm --prefer-offline

production-dependencies:api:
  extends:
    - .production-dependencies
    - .run_on_master_develop_and_manual_for_merge_requests
  variables:
    PROJECT_PATH: services/api
  before_script:
    - npm ci --productionn --prefix packages/prisma --cache $PROJECT_PATH/.npm --prefer-offline

build:api:
  extends:
    - .build
    - .run_on_master_develop_and_manual_for_merge_requests
  variables:
    PROJECT_PATH: services/api
  artifacts:
    paths:
      - $PROJECT_PATH/dist
    expire_in: 1 day

#-----------------------------------
# Site
#-----------------------------------

lint:site:
  extends:
    - .lint
    - .run_on_site_change
  needs:
    - generate-graphql-schema:api
  variables:
    PROJECT_PATH: services/site

test:site:
  extends:
    - .test
    - .run_on_site_change
  needs:
    - generate-graphql-schema:api
  variables:
    PROJECT_PATH: services/site

build:site:
  extends:
    - .build
    - .run_on_master_develop_and_manual_for_merge_requests
  needs:
    - generate-graphql-schema:api
  variables:
    PROJECT_PATH: services/site
  artifacts:
    paths:
      - $PROJECT_PATH/.next
    expire_in: 1 day

production-dependencies:site:
  extends:
    - .production-dependencies
    - .run_on_master_develop_and_manual_for_merge_requests
  variables:
    PROJECT_PATH: services/site

#-----------------------------------
# Import Challenges
#-----------------------------------

lint:import-challenges:
  extends:
    - .lint
    - .run_on_import_challenges_change
  needs:
    - build:prisma
  variables:
    PROJECT_PATH: services/import-challenges
  before_script:
    - npm ci --ignore-scripts
    - npm ci --prefix packages/prisma --cache $PROJECT_PATH/.npm --prefer-offline
    - npm ci --prefix $PROJECT_PATH --cache $PROJECT_PATH/.npm --prefer-offline

test:import-challenges:
  extends:
    - .test
    - .run_on_import_challenges_change
  needs:
   - build:prisma
  variables:
    POSTGRES_DB: a11y-challenges
    POSTGRES_USER: a11y-challenges
    POSTGRES_PASSWORD: secret
    DB_URL: postgresql://a11y-challenges:secret@postgres:5432/a11y-challenges
    PROJECT_PATH: services/import-challenges
  services:
    - postgres
  before_script:
    - npm ci --ignore-scripts
    - npm ci --prefix packages/prisma --cache $PROJECT_PATH/.npm --prefer-offline
    - npm ci --prefix $PROJECT_PATH --cache $PROJECT_PATH/.npm --prefer-offline

production-dependencies:import-challenges:
  extends:
    - .production-dependencies
    - .run_on_master_develop_and_manual_for_merge_requests
  variables:
    PROJECT_PATH: services/import-challenges
  before_script:
    - npm ci --production --prefix packages/prisma --cache $PROJECT_PATH/.npm --prefer-offline

build:import-challenges:
  extends:
    - .build
    - .run_on_master_develop_and_manual_for_merge_requests
  variables:
    PROJECT_PATH: services/import-challenges
  artifacts:
    paths:
      - $PROJECT_PATH/.next
    expire_in: 1 day

#-----------------------------------
# Database Migrations
#-----------------------------------

lint:database-migration:
  extends:
    - .lint
    - .run_on_database_migration_change
  variables:
    PROJECT_PATH: services/database-migration

production-dependencies:database-migration:
  extends:
    - .production-dependencies
    - .run_on_master_develop_and_manual_for_merge_requests
  variables:
    PROJECT_PATH: services/database-migration

#-----------------------------------
# Terraform
#-----------------------------------

terraform:cloud:validate:
  extends:
    - .run_on_terraform_change
  tags:
    - docker
  stage: analyze
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  before_script:
    - terraform -chdir=terraform/cloud init
  script:
    - terraform -chdir=terraform/cloud validate

terraform:local:validate:
  extends:
    - .run_on_terraform_change
  tags:
    - docker
  stage: analyze
  image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  before_script:
    - terraform -chdir=terraform/local init
  script:
    - terraform -chdir=terraform/local validate

#-----------------------------------
# Deployment
#-----------------------------------

deploy-review:
  extends:
    - .deploy
  variables:
    WORKSPACE: $CI_COMMIT_REF_SLUG
  environment:
    name: review/$CI_COMMIT_REF_NAME
    # url: https://$CI_ENVIRONMENT_SLUG.example.com
    on_stop: stop_review
  only:
    - merge_request

deploy:
  extends:
    - .deploy
  variables:
    WORKSPACE: $CI_COMMIT_REF_SLUG
  only:
    - master
    - develop

stop_review:
  stage: deploy
  variables:
    WORKSPACE: $CI_COMMIT_REF_SLUG
  before_script:
    - terraform -chdir=terraform/cloud init
  script:
    - terraform -chdir=terraform/cloud workspace select $WORKSPACE
    - terraform -chdir=terraform/cloud destroy
    - terraform -chdir=terraform/cloud workspace select default
    - terraform -chdir=terraform/cloud workspace delete $WORKSPACE
  when: manual
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop