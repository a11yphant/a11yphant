name: CI/CD

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  # ESLint Config
  lint-eslint-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: packages/eslint-config
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: npm run lint --prefix packages/eslint-config

  # API
  generate-graphql-schema:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: services/api
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate GraphQL Schema
        run: npm run generate-schema --prefix services/api

      - uses: actions/upload-artifact@v3
        with:
          name: graphql-schema
          path: services/api/schema.gql
          retention-days: 1

  lint-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: services/api
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: npm run lint --prefix services/api

  test-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: a11yphant
          POSTGRES_USER: a11yphant
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: services/api
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: npm run test:coverage --prefix services/api
        env:
          DB_URL: postgresql://a11yphant:secret@localhost:5432/a11yphant

  build-api:
    needs:
      - lint-api
      - test-api
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/docker-build
        with:
          path: services/api
          npm-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.ref_name }}

  # Site
  lint-site:
    needs: generate-graphql-schema
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: services/site
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: graphql-schema
          path: services/api/schema.gql

      - name: Lint
        run: npm run lint --prefix services/site

  test-site:
    needs: generate-graphql-schema
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: services/site
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v3
        with:
          name: graphql-schema
          path: services/api/schema.gql

      - name: Test
        run: npm run test:coverage --prefix services/site

  build-site:
    needs:
      - lint-site
      - test-site
      - generate-graphql-schema
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: graphql-schema
          path: services/api/schema.gql

      - name: Build
        uses: ./.github/actions/docker-build
        with:
          path: services/site
          npm-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.ref_name }}

  # Submission Checker
  lint-submission-checker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: services/submission-checker
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint
        run: npm run lint --prefix services/submission-checker

  test-submission-checker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare
        uses: ./.github/actions/prepare-node
        with:
          path: services/submission-checker
          npm-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Test
        run: npm run test:coverage --prefix services/submission-checker

  build-submission-checker:
    needs:
      - lint-submission-checker
      - test-submission-checker
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build
        uses: ./.github/actions/docker-build
        with:
          path: services/submission-checker
          npm-token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ github.ref_name }}
