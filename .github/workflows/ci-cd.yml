name: CI/CD

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
      - develop

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  lint-content:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: ./.github/actions/prepare-node

      - name: Lint Content
        run: npm run lint:content

  lint-app:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: ./.github/actions/prepare-node

      - name: Generate GraphQL Schema
        run: npm run schema:generate

      - name: Lint
        run: npm run lint

  test:
    needs:
      - lint-app
      - lint-content
    runs-on: ubuntu-22.04
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: a11yphant
          POSTGRES_USER: a11yphant
          POSTGRES_PASSWORD: secret
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      SITE_HOST: localhost
      SITE_PORT: 3001
      SITE_GRAPHQL_ENDPOINT_SERVER: http://localhost:3000/graphql
      SITE_GRAPHQL_ENDPOINT_CLIENT: http://localhost:3001/graphql
      SITE_GITHUB_LOGIN_ENDPOINT: /auth/github
      SITE_TWITTER_LOGIN_ENDPOINT: /auth/twitter
      SITE_PLAUSIBLE_BASE_URL: "https://plausible.a11yphant.com"
      SITE_BASE_URL: "http://localhost:3001"
      DATABASE_URL: postgresql://a11yphant:secret@localhost:5432/a11yphant
      DATABASE_URL_UNPOOLED: postgresql://a11yphant:secret@localhost:5432/a11yphant
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: ./.github/actions/prepare-node

      - name: Generate GraphQL Schema
        run: npm run schema:generate

      - name: Test
        run: npm run test:coverage

      - name: Upload Coverage
        uses: actions/upload-artifact@v4
        with:
          name: test-coverage-site
          path: coverage

  upload-coverage-reports:
    needs:
      - test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Determine git commit sha and branch because github actions does not provide them in a consistent manner
        id: git-variables
        env:
          PR_HEAD_SHA: ${{ github.event.pull_request.head.sha }}
        run: |
          if [[ "$GITHUB_EVENT_NAME" = "pull_request" ]]; then
            GIT_COMMIT_SHA=$PR_HEAD_SHA
            GIT_BRANCH=$GITHUB_HEAD_REF
          else
            GIT_COMMIT_SHA=$GITHUB_SHA
            GIT_BRANCH=${GITHUB_REF#"refs/heads/"}
          fi

          echo "git-branch=$GIT_BRANCH" >> "$GITHUB_OUTPUT"
          echo "git-commit-sha=$GIT_COMMIT_SHA" >> "$GITHUB_OUTPUT"

      - name: Download CodeClimate Test Reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Download Site test coverage
        uses: actions/download-artifact@v4
        with:
          name: test-coverage-site
          path: coverage/

        env:
          GIT_BRANCH: ${{ steps.git-variables.outputs.git-branch }}
          GIT_COMMIT_SHA: ${{ steps.git-variables.outputs.git-commit-sha }}

      - name: Format Site Coverage
        run: ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.json coverage/lcov.info
        env:
          GIT_BRANCH: ${{ steps.git-variables.outputs.git-branch }}
          GIT_COMMIT_SHA: ${{ steps.git-variables.outputs.git-commit-sha }}

      - name: Upload Coverage
        run: ./cc-test-reporter upload-coverage
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_TEST_REPORTER_ID }}
          GIT_BRANCH: ${{ steps.git-variables.outputs.git-branch }}
          GIT_COMMIT_SHA: ${{ steps.git-variables.outputs.git-commit-sha }}

  test-end-to-end:
    # needs:
    #   - test
    runs-on: ubuntu-22.04
    env:
      SITE_HOST: localhost
      SITE_PORT: 3001
      SITE_GRAPHQL_ENDPOINT_SERVER: http://localhost:3000/graphql
      SITE_GRAPHQL_ENDPOINT_CLIENT: http://localhost:3001/graphql
      SITE_GITHUB_LOGIN_ENDPOINT: /auth/github
      SITE_TWITTER_LOGIN_ENDPOINT: /auth/twitter
      SITE_PLAUSIBLE_BASE_URL: "https://plausible.a11yphant.com"
      SITE_BASE_URL: "http://localhost:3001"
      DATABASE_URL: postgresql://a11yphant:secret@localhost:5432/a11yphant
      DATABASE_URL_UNPOOLED: postgresql://a11yphant:secret@localhost:5432/a11yphant
      API_CHALLENGES_LOCATION: "../../../../../challenges"
      API_KEY: "I-am-a-very-secret-key"
      API_CHALLENGE_IMPORTER_ENABLED: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup node
        uses: ./.github/actions/prepare-node

      - name: Build app
        run: npm run build

      - name: Set up Database
        run: |
          docker compose up -d --wait
          npm run db:migrate:prod
          npm run console import:challenges

      - name: Start app
        run: npm run start > app-log.txt &

      - name: Run Cypress
        uses: cypress-io/github-action@v4
        with:
          working-directory: tests/cypress
          command: npm test:e2e
          build: npm run cypress:db-dump:update
        env:
          CYPRESS_BASE_URL: "http://localhost:3001"

      - name: Log output
        if: failure()
        run: cat app-log.txt

      - name: Upload artifact
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: tests/cypress/screenshots/
          retention-days: 1

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: tests/cypress/screenshots
          retention-days: 1
