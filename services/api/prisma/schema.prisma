// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Challenge {
  id           String      @id @default(uuid()) @db.Uuid
  slug         String      @unique
  name         String
  introduction String      @default("")
  difficulty   Int         @default(0)
  order        Int         @default(0)
  codeLevels   CodeLevel[]
  quizLevels   QuizLevel[]

  @@map(name: "challenges")
}

model QuizLevel {
  id            String         @id @default(uuid()) @db.Uuid
  order         Int            @default(0)
  question      String
  challenge     Challenge      @relation(fields: [challengeId], references: [id])
  challengeId   String         @db.Uuid
  answerOptions AnswerOption[]

  @@map("quiz_levels")
}

model AnswerOption {
  id          String    @id @default(uuid()) @db.Uuid
  text        String
  correct     Boolean   @default(false)
  quizLevel   QuizLevel @relation(fields: [quizLevelId], references: [id], onDelete: Cascade)
  quizLevelId String    @db.Uuid

  @@map("quiz_answer_options")
}

model CodeLevel {
  id            String        @id @default(uuid()) @db.Uuid
  order         Int           @default(0)
  instructions  String
  challenge     Challenge     @relation(fields: [challengeId], references: [id])
  challengeId   String        @db.Uuid
  requirements  Requirement[]
  submissions   Submission[]
  tasks         Task[]
  html          String?
  css           String?
  js            String?
  hasHtmlEditor Boolean       @default(true)
  hasCssEditor  Boolean       @default(false)
  hasJsEditor   Boolean       @default(false)

  @@map(name: "code_levels")
}

model Task {
  id      String     @id @default(uuid()) @db.Uuid
  text    String
  hints   Hint[]
  Level   CodeLevel? @relation(fields: [levelId], references: [id])
  levelId String?    @db.Uuid

  @@map("tasks")
}

model Rule {
  id           String        @id @default(uuid()) @db.Uuid
  key          String        @unique
  requirements Requirement[]

  @@map(name: "rules")
}

model Requirement {
  id          String        @id @default(uuid()) @db.Uuid
  title       String        @default("")
  description String        @default("")
  order       Int           @default(0)
  level       CodeLevel     @relation(fields: [levelId], references: [id])
  levelId     String        @db.Uuid
  rule        Rule?         @relation(fields: [ruleId], references: [id])
  ruleId      String?       @db.Uuid
  options     Json?
  CheckResult CheckResult[]

  @@map(name: "requirements")
}

model Hint {
  id     String  @id @default(uuid()) @db.Uuid
  text   String  @default("")
  Task   Task?   @relation(fields: [taskId], references: [id])
  taskId String? @db.Uuid

  @@map(name: "hints")
}

model Submission {
  id        String    @id @default(uuid()) @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  html      String?
  css       String?
  js        String?
  level     CodeLevel @relation(fields: [levelId], references: [id])
  levelId   String    @db.Uuid
  result    Result?
  user      User?     @relation(fields: [userId], references: [id])
  userId    String?   @db.Uuid

  @@map(name: "submissions")
}

model Result {
  id           String        @id @default(uuid()) @db.Uuid
  status       Int           @default(0)
  checkResults CheckResult[]
  submission   Submission    @relation(fields: [submissionId], references: [id])
  submissionId String        @db.Uuid

  @@map(name: "results")
}

model CheckResult {
  id            String      @id @default(uuid()) @db.Uuid
  result        Result      @relation(fields: [resultId], references: [id])
  resultId      String      @db.Uuid
  requirement   Requirement @relation(fields: [requirementId], references: [id])
  requirementId String      @db.Uuid
  status        Int

  @@map(name: "check_results")
}

model User {
  id           String       @id @default(uuid()) @db.Uuid
  authProvider String       @default("anonymous")
  authId       String?
  email        String?
  password     String?
  displayName  String?
  submissions  Submission[]

  @@map("users")
}
